name: Release

on: 
  workflow_dispatch:
    inputs:
      deno-version:
        description: 'Version of Deno'
        required: true
        type: string

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DENO_VERSION: ${{ inputs.deno-version }}

jobs:
  linux-amd64:
    name: "üê• Linux AMD64"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: bash .github/scripts/linux-amd64.bash
      - uses: actions/upload-artifact@v4
        with:
          name: v8-deno-linux-amd64.tar.xz
          path: deno_snapshots/cli/snapshots/release/v8-deno-linux-amd64.tar.xz
          if-no-files-found: error
          retention-days: 1

  linux-arm64:
    name: "üê• Linux ARM64 (skip) ‚ö†Ô∏è"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: bash .github/scripts/linux-arm64.bash

  macos-amd64:
    name: "üçé MacOS AMD64"
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - run: bash .github/scripts/macos-amd64.bash
      - uses: actions/upload-artifact@v4
        with:
          name: v8-deno-macos-amd64.tar.xz
          path: deno_snapshots/cli/snapshots/release/v8-deno-macos-amd64.tar.xz
          if-no-files-found: error
          retention-days: 1

  macos-arm64:
    name: "üçé MacOS ARM64"
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - run: bash .github/scripts/macos-arm64.bash
      - uses: actions/upload-artifact@v4
        with:
          name: v8-deno-macos-arm64.tar.xz
          path: deno_snapshots/cli/snapshots/release/v8-deno-macos-arm64.tar.xz
          if-no-files-found: error
          retention-days: 1

  windows-amd64:
    name: "üü¶ Windows AMD64"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - run: .\.github\scripts\windows-amd64.ps1
      - uses: actions/upload-artifact@v4
        with:
          name: v8-deno-windows-amd64.tar.xz
          path: deno_snapshots/cli/snapshots/release/v8-deno-windows-amd64.tar.xz
          if-no-files-found: error
          retention-days: 1

  windows-arm64:
    name: "üü¶ Windows ARM64 (skip) ‚ö†Ô∏è"
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - run: .\.github\scripts\windows-arm64.ps1

  publish-github-release:
    name: "üîÑ Publish Github Release"
    runs-on: ubuntu-latest
    needs: [linux-amd64, linux-arm64, macos-amd64, macos-arm64, windows-amd64, windows-arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - run: |
          gh release create $DENO_VERSION --draft --notes "Automatically built binaries"
          gh release edit $BIN_VERSION --title "Deno V8 Snapshots - $DENO_VERSION"
          
          gh release upload $BIN_VERSION linux-amd64.tar.xz/mach-linux-amd64.tar.xz
          gh release upload $BIN_VERSION linux-arm64.tar.xz/mach-linux-arm64.tar.xz
          gh release upload $BIN_VERSION macos-amd64.tar.xz/mach-macos-amd64.tar.xz
          gh release upload $BIN_VERSION macos-arm64.tar.xz/mach-macos-arm64.tar.xz
          gh release upload $BIN_VERSION windows-amd64.tar.gz/mach-windows-amd64.tar.gz
          
          gh release edit $BIN_VERSION --draft=false
